{"version":3,"file":"Inputs.js","sourceRoot":"","sources":["../../ts/components/Inputs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal } from '@preact/signals'\nimport { getAddress } from 'ethers'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { Blockie } from './Blockie.js'\n\nexport const NumberInput = ({ label, placeholder, size, warn, value }: { label: string, placeholder: string, warn?: boolean, size?: 'w-full' | 'w-max' | string, value: Signal<string | undefined> }) => (\n\t<div className={`${size ?? ''} flex flex-col justify-center border ${warn ? 'border-red-400' : 'border-white/50 focus-within:border-white/80'} h-16 bg-transparent outline-none focus-within:bg-white/5 px-4 bg-transparent`} >\n\t\t<span className='text-sm text-white/50 leading-tight'>{label}</span>\n\t\t<input {...{ placeholder, onInput: (e) => value.value = e.currentTarget.value, value: value.value }} type='number' className='h-6 bg-transparent outline-none placeholder:text-white/20' />\n\t</div>\n)\n\nexport const TextInput = ({ label, placeholder, size, warn, value }: { label: string, placeholder: string, warn?: boolean, size?: 'w-full' | 'w-max' | string, value: Signal<string | undefined> }) => (\n\t<div className={`${size ?? ''} flex flex-col justify-center border ${warn ? 'border-red-400' : 'border-white/50 focus-within:border-white/80'} h-16 bg-transparent outline-none focus-within:bg-white/5 px-4 bg-transparent`} >\n\t\t<span className='text-sm text-white/50 leading-tight'>{label}</span>\n\t\t<input {...{ placeholder, onInput: (e) => value.value = e.currentTarget.value, value: value.value }} type='text' className='h-6 bg-transparent outline-none placeholder:text-white/20' />\n\t</div>\n)\n\nexport const BlockieTextInput = ({ label, placeholder, size, warn, value }: { label: string, placeholder: string, warn?: boolean, size?: 'w-full' | 'w-max' | string, value: Signal<string | undefined> }) => {\n\tconst parsedAddress = useComputed(() => {\n\t\tif (warn || !value.value || value.value.length !== 42) return 0n\n\t\tconst parsed = EthereumAddress.safeParse(getAddress(value.value.toLowerCase()))\n\t\treturn parsed.success ? parsed.value : 0n\n\t})\n\tconst blockieSize = useSignal(2)\n\n\treturn (\n\t\t<div className={`${size ?? ''} flex flex-col justify-center border ${warn ? 'border-red-400' : 'border-white/50 focus-within:border-white/80'} h-16 bg-transparent outline-none focus-within:bg-white/5 px-4 bg-transparent`} >\n\t\t\t<span className='text-sm text-white/50 leading-tight'>{label}</span>\n\t\t\t<div className='w-full flex gap-2 items-center'>\n\t\t\t\t{!warn && value.value ? <Blockie address={parsedAddress} scale={blockieSize} /> : null}\n\t\t\t\t<input {...{ placeholder, onInput: (e) => value.value = e.currentTarget.value, value: value.value }} type='text' className='grow h-6 bg-transparent outline-none placeholder:text-white/20' />\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport const TokenAmountInput = ({ label, placeholder, value, size, warn, balance }: { label: string, balance: bigint, placeholder: string, warn?: boolean, size?: 'w-full' | 'w-max' | string, value: Signal<string | undefined> }) => (\n\t<div className={`${size ?? ''} flex flex-wrap justify-center border ${warn ? 'border-red-400' : 'border-white/50 focus-within:border-white/80'} bg-transparent outline-none focus-within:bg-white/5 px-4 bg-transparent`} >\n\t\t<div className='flex flex-col h-16 flex-grow justify-center'>\n\t\t\t<span className='text-sm text-white/50'>{label}</span>\n\t\t\t<input {...{ placeholder, onInput: (e) => value.value = e.currentTarget.value, value: value.value }} type='number' className='h-6 bg-transparent outline-none placeholder:text-white/20' />\n\t\t</div>\n\t\t<div className='flex gap-2 items-center h-16'>\n\t\t\t<span className='text-sm text-white/70'>Balance: {balance}</span>\n\t\t\t<button className='p-2 outline-none border border-white/50 focus:border-white text-xs text-white/50 focus:text-white hover:text-white hover:border-white disabled:opacity-50' onClick={() => value.value = String(balance)}>Max</button>\n\t\t</div>\n\t</div>\n)\n"]}