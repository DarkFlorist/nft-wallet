{"version":3,"file":"types.js","sourceRoot":"","sources":["../../ts/library/types.ts"],"names":[],"mappings":"","sourcesContent":["interface Eip1193Provider {\n\trequest(request: { method: string; params?: Array<any> | Record<string, any> }): Promise<any>\n\ton(eventName: string | symbol, listener: (...args: any[]) => void): this\n\tremoveListener(eventName: string | symbol, listener: (...args: any[]) => void): this\n}\n\ndeclare global {\n\tinterface Window {\n\t\tethereum?: Eip1193Provider\n\t}\n}\n\nexport type BlockInfo = { blockNumber: bigint; baseFee: bigint; priorityFee: bigint }\n"]}